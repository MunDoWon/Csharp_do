using System;
using System.Collections;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace Enumerable01
{
    class Mylist : IEnumerable, IEnumerator
    {
        private int[] array;
        int position = -1;
        public Mylist()
        {
            array = new int[3];
        }
        public int this[int index]
        {
            get { return array[index]; }
            set
            {
                if (index >= array.Length)
                {
                    Array.Resize<int>(ref array, index + 1);
                    Console.WriteLine($"Array Resized : {array.Length}");
                }
                array[index] = value;
            }
        }

        public object Current       //IEnumerator로 부터 상속받음 current프로퍼티는
                                    //현재위치요소를 받환
        {
            get
            {
                return array[position];
            }
        }
        public bool MoveNext()      //IEnumerator로 부터 상속받음,다음위치의 요소로이동
        {
             if (position == array.Length - 1)
            {
                Reset();
                return false;
            }

             position++;
            return (position < array.Length);
        }

        public void Reset()     //요소의 위치를 첫요소의 '앞'으로 옮김
        {
            position = -1;
        }
        public IEnumerator GetEnumerator()
        {
            return this;
        }
    }
    
         
    
    internal class Program
    {
        static void Main(string[] args)
        {
            Mylist list = new Mylist();
            for (int i = 0; i < 5; i++)
            {
                list[i] = i;
            }
            foreach (int e in list)
                Console.WriteLine(e);
        }
    }
}
