namespace ScoreProcessingQuiz.Models
{
    public class GradeModel
    {
        public string Subject { get; set; }
        public string Grade { get; set; }

    }
}

Homecontroller

using Microsoft.AspNetCore.Mvc;
using ScoreProcessingQuiz.Models;
using System.Diagnostics;

namespace ScoreProcessingQuiz.Controllers
{
    public class HomeController : Controller
    {
        private readonly ILogger<HomeController> _logger;

        public HomeController(ILogger<HomeController> logger)
        {
            _logger = logger;
        }

        public IActionResult Index()
        {
            var subjects = new List<string> { "국어", "영어", "수학", "사회", "과학" };
            ViewBag.Subjects = subjects;
            return View();
        }
        [HttpPost]
        public IActionResult Calculate(List<GradeModel> grades)
        {
            double totalGradePoint = 0;
            double totalCredit = grades.Count;

            foreach (var grade in grades)
            {
                switch (grade.Grade)
                {
                    case "A+":
                        totalGradePoint += 4.5;
                        break;
                    case "A":
                        totalGradePoint += 4.0;
                        break;
                    case "B+":
                        totalGradePoint += 3.5;
                        break;
                    case "B":
                        totalGradePoint += 3.0;
                        break;
                    case "C+":
                        totalGradePoint += 2.5;
                        break;
                    case "C":
                        totalGradePoint += 2.0;
                        break;
                    case "D+":
                        totalGradePoint += 1.5;
                        break;
                    case "D":
                        totalGradePoint += 1.0;
                        break;
                    default:
                        
                        break;
                }
            }

            double averageGradePoint = totalGradePoint / totalCredit;
            ViewBag.AverageGradePoint = averageGradePoint;

            return View("Result");
        }
        public IActionResult Result()
        {
            return View();
        }
        public IActionResult Privacy()
        {
            return View();
        }

        [ResponseCache(Duration = 0, Location = ResponseCacheLocation.None, NoStore = true)]
        public IActionResult Error()
        {
            return View(new ErrorViewModel { RequestId = Activity.Current?.Id ?? HttpContext.TraceIdentifier });
        }
    }
}


index

@model List<GradeModel>
@{
    ViewData["Title"] = "Home Page";
}

<div class="text-center">
    <h1 class="display-4">성적처리</h1>    
</div>

<div>
    <form method="post" asp-action="Calculate">
        @for (var i = 0; i < Model.Count; i++)
        {
            <div>
                <label>Subject: @ViewBag.Subjects[i]</label>
                <select asp-for="@Model[i].Grade" class="form-control">
                    <option value="A+">A+</option>
                    <option value="A">A</option>
                    <option value="B+">B+</option>
                    <option value="B">B</option>
                    <option value="C+">C+</option>
                    <option value="C">C</option>
                    <option value="D+">D+</option>
                    <option value="D">D</option>
                </select>
            </div>
        }

        <button type="submit" class="btn btn-primary">Calculate</button>
    </form>
</div>

Result


@{
    ViewData["Title"] = "Result";
}

<h1>Result</h1>
<p>Average Grade Point: @ViewBag.AverageGradePoint</p>


