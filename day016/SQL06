SELECT SUM(SAL) FROM EMP;
SELECT DEPTNO,SUM(SAL) FROM EMP GROUP BY DEPTNO ORDER BY DEPTNO;
SELECT ENAME,SUM(SAL) FROM EMP GROUP BY ENAME;

#EMP 테이블에 존재하는 직원의 수는?
SELECT COUNT(*) FROM EMP;
#가장 높은 급여 ,가장 낮은 급여
SELECT MAX(SAL), MIN(SAL) FROM EMP;
#부서 번호가 20인 사원의 입사일중 제일 오래된 입사일 출력
#HINT MIN,HIREDATE
SELECT MIN(HIREDATE) FROM EMP WHERE DEPTNO=20;
#30번 부서의 사원들의 평균 급여를 소수점 두자리에서 반올림
SELECT ROUND(AVG(SAL),1) FROM EMP WHERE DEPTNO = 30;
#부서별 평균 급여를 소수점 둘째 자리에서 반올림
SELECT DEPTNO, ROUND(AVG(SAL),1) FROM EMP GROUP BY DEPTNO ORDER BY DEPTNO;
#부서번호 및 직책별 평균 급여 정렬하기
SELECT DEPTNO, JOB,ROUND(AVG(SAL),1) FROM EMP 
GROUP BY DEPTNO,JOB ORDER BY DEPTNO,JOB;
#GROUP BY절을 사용하여 부서 번호별 평균 추가수당을 출력
SELECT AVG(COMM), DEPTNO FROM EMP 
GROUP BY DEPTNO ORDER BY DEPTNO;

#평균급여가 2000이상인 부서와 직책은? 그룹안에서는 HAVING 써야함
SELECT DEPTNO,JOB,AVG(SAL) FROM EMP GROUP BY DEPTNO,JOB 
HAVING AVG(SAL)>=2000 ORDER BY DEPTNO,JOB;

#급여가 3000이하 이면서 평균급여가 2000이상인 부서와 직책
SELECT DEPTNO,JOB,AVG(SAL) FROM EMP GROUP BY DEPTNO,JOB 
HAVING AVG(SAL)>=2000 AND AVG(SAL)<=3000 ORDER BY DEPTNO,JOB;
#WHERE 사용
SELECT DEPTNO,JOB,AVG(SAL) FROM EMP 
WHERE SAL <= 3000
GROUP BY DEPTNO,JOB 
HAVING AVG(SAL)>=2000 ORDER BY DEPTNO,JOB;

#212-1부서번호,평균 급여,최고 급여,최저급여,사원수 ,평균급여 소수점 제외,부서번호별로출력
SELECT DEPTNO,TRUNC(AVG(SAL),0) AS AVG_SAL,MAX(SAL) AS MAX_SAL,
MIN(SAL)AS MIN_SAL,COUNT (*) AS CNT 
FROM EMP GROUP BY DEPTNO;

#212-2 사원이 3명 이상인 직책과 인원수 출력
SELECT JOB, COUNT(*) FROM EMP GROUP BY JOB HAVING COUNT(*)>=3;

#212-3 사원 입사연도 기준 부서별 입사원수 출력
SELECT TO_CHAR(HIREDATE,'YYYY')AS HIRE_YEAR,DEPTNO,COUNT(*) as CNT FROM EMP
GROUP BY TO_CHAR(HIREDATE,'YYYY'),DEPTNO;

#212-4 추가수당 받는 사원수와 아닌 사원수 출력
SELECT NVL2(COMM,'O','X') AS EXIST_COMM, COUNT(*) AS CNT FROM EMP GROUP BY NVL2(COMM,'O','X');

#212-5 입사연도별 사원수,최고급여,최저급여,평균굽여 출력, 각부서별 소계,통계출력
SELECT DEPTNO,TO_CHAR(HIREDATE,'YYYY')AS HIRE_YEAR,COUNT(*)AS CNT,
MAX(SAL)AS MAX_SAL,MIN(SAL)AS MIN_SAL,AVG(SAL)AS AVG_SAL
FROM EMP GROUP BY DEPTNO,TO_CHAR(HIREDATE,'YYYY') ORDER BY DEPTNO;


#JOIN 테이블의 결합
SELECT * FROM DEPT;
SELECT EMPNO,ENAME , DEPTNO FROM EMP;
#REAL JOIN --->M * N
#EMP 12 * DEPT 4
SELECT * FROM DEPT;
SELECT * FROM EMP;
SELECT * FROM EMP,DEPT;
SELECT COUNT(*) FROM EMP,DEPT;

#내가 사용하는 JOIN구문
#8-2
SELECT * FROM EMP E,DEPT D
WHERE E.DEPTNO = D.DEPTNO 
ORDER BY EMPNO;
#EMP테이블 별칭을 E DEPT별칭을 D 로하여 
#EMP 테이블의 사원번호와 DEPT테이블 부서의 이름이
#출력되도록 JOIN쿼리를 작성해라
SELECT EMPNO, DNAME 
FROM EMP E, DEPT D 
WHERE E.DEPTNO = D.DEPTNO 
ORDER BY EMPNO;
# 등가조인 
SELECT E.EMPNO,E.ENAME,D.DEPTNO,D.DNAME,D.LOC 
FROM EMP E, DEPT D 
WHERE E.DEPTNO=D.DEPTNO;
#239-1 SAL 2000초과사원 부서정보,사원정보
SELECT E.DEPTNO,DNAME,EMPNO,ENAME,SAL 
FROM EMP E, DEPT D
WHERE E.DEPTNO = D.DEPTNO AND SAL >2000
ORDER BY DEPTNO;

#239-2 각 부서별 평균 급여,최대급여,최소급여 ,사원수출력
SELECT E.DEPTNO,DNAME,TRUNC(AVG(SAL),0)AS AVG_SAL,
    MAX(SAL)AS MAX_SAL,MIN(SAL)AS MIN_SAL,COUNT(*)AS CNT
FROM EMP E,DEPT D
WHERE E.DEPTNO = D.DEPTNO
GROUP BY  E.DEPTNO,DNAME ORDER BY E.DEPTNO;

#시퀀스SEQ 348
#연습테이블
CREATE TABLE DEPT_SEQUENCE
    AS SELECT * FROM DEPT
    WHERE 1 <> 1;
#테이블 생성확인
SELECT * FROM DEPT_SEQUENCE;
DESC DEPT_SEQUENCE;
#SEQ 쿼리로 만들기
CREATE SEQUENCE SEQ_DEPT_SEQUENCE
INCREMENT BY 10
START WITH 10
MAXVALUE 90
MINVALUE 0
NOCYCLE
CACHE 2;

#시퀀스 확인
SELECT * FROM USER_SEQUENCES;
#시퀀스 사용
INSERT INTO DEPT_SEQUENCE (DEPTNO,DNAME,LOC)
VALUES(SEQ_DEPT_SEQUENCE.NEXTVAL,'DATABASE','SEOUL');
SELECT * FROM DEPT_SEQUENCE;
#시퀀스 번호를 확인하기
SELECT SEQ_DEPT_SEQUENCE.CURRVAL FROM DUAL;
#시퀀스 수정
ALTER SEQUENCE SEQ_DEPT_SEQUENCE
INCREMENT BY 3
MAXVALUE 99
CYCLE;
COMMIT;
#시퀀스 삭제
DROP SEQUENCE SEQ_DEPT_SEQUENCE;
SELECT * FROM USER_SEQUENCE;
